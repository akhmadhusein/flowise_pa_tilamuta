name: Node CI

on:
    push:
        branches:
            - ntg
    # pull_request:
    #     branches:
    #         - '*'

env:
    CI_REGISTRY: harbor.onhubi.com
    NAMESPACE: staging-flowise
    DEPLOYMENT: flowise-ntg

jobs:
    build-test:
        strategy:
            matrix:
                platform: [debian-latest]
                node-version: [20.15.0]
        runs-on: ${{ matrix.platform }}
        env:
            PUPPETEER_SKIP_DOWNLOAD: true
        steps:
            - uses: actions/checkout@v4
              with:
                  ref: ntg
            - uses: pnpm/action-setup@v3
              with:
                  version: 9.0.4
            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node-version }}
                  check-latest: false
                  cache: 'pnpm'
            - run: npm i -g pnpm
            - run: pnpm install --no-frozen-lockfile
            # - run: ./node_modules/.bin/cypress install
            - run: pnpm lint
            - run: pnpm build

    docker-build-push:
        runs-on: debian-latest
        needs: build-test
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  ref: ntg
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
            - name: Login to Docker registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.CI_REGISTRY }}
                  username: ${{ secrets.REGISTRY_USER }}
                  password: ${{ secrets.REGISTRY_TOKEN }}
            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              env:
                  ACTIONS_RUNTIME_TOKEN: ''
              with:
                  context: .
                  file: ./docker/Dockerfile-ntg
                  platforms: linux/amd64
                  push: true
                  tags: ${{ env.CI_REGISTRY }}/ntg/chatbot/flowise:latest

            # - name: Restart Deployment
            #   run: |
            #    TOKEN="${{ secrets.DEPLOY_TOKEN }}"
            #    K8S_URL="${{ vars.K8S_URL }}"
            #    kubectl --server=$K8S_URL --token=$TOKEN -n ${{ env.NAMESPACE }} rollout restart deployment ${{ env.DEPLOYMENT }}
